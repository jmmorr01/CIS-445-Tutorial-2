*------------------------------------------------------------*
User:                jmmorr01
Date:                October 26, 2018
Time:                00:10:03
Site:                70080761
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 26, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00:09:55" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                October 26, 2018
Time:                00:09:55
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0V1CKQT "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0V1CKQT new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 26, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00:09:55" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 26, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00:09:55" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
21632      proc freq data=EMWS1.Impt_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_VariableSet noprint;
21633      table ROLE*LEVEL/out=WORK.ImptMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ImptMETA;
21634      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set EMWS1.IMPT_VARIABLESET.
NOTE: The data set WORK.IMPTMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.07 seconds
      cpu time            0.06 seconds
 
 
21635      proc print data=WORK.ImptMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptMETA label noobs;
21636      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
21637      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
21638      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
21639      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
21640      run;
 
NOTE: There were 4 observations read from the data set WORK.IMPTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21641      title10;
MPRINT(EM_DIAGRAM):   title10;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Preparing metadata for training;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   set WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   where(use = 'Y' or (ROLE ne 'REJECTED' and USE = 'D'));
MPRINT(EM_DIAGRAM):   if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "COUNT";
MPRINT(EM_DIAGRAM):   else METHOD = "MEAN";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if role = 'TARGET' and METHOD='DEFAULT' then do;
MPRINT(EM_DIAGRAM):   if level ne 'INTERVAL' then METHOD = "NONE";
MPRINT(EM_DIAGRAM):   else METHOD = "NONE";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
21659      data WORK.Impt_TREEINPUTS;
MPRINT(EM_DIAGRAM):    data WORK.Impt_TREEINPUTS;
21660      set WORK.M3N8V2S0;
MPRINT(EM_DIAGRAM):   set WORK.M3N8V2S0;
21661      if ROLE ne 'FREQ' then do;
MPRINT(EM_DIAGRAM):   if ROLE ne 'FREQ' then do;
21662      if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
MPRINT(EM_DIAGRAM):   if ((ROLE in('TARGET','REJECTED') and useTree='D') or useTree='N') then delete;
21663      ROLE = 'INPUT';
MPRINT(EM_DIAGRAM):   ROLE = 'INPUT';
21664      end;
MPRINT(EM_DIAGRAM):   end;
21665      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M3N8V2S0.
NOTE: The data set WORK.IMPT_TREEINPUTS has 12 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21666      data WORK.M3N8V2S0;
MPRINT(EM_DIAGRAM):   data WORK.M3N8V2S0;
21667      set WORK.M3N8V2S0;
MPRINT(EM_DIAGRAM):   set WORK.M3N8V2S0;
21668      if METHOD in("TREE", "TREESURR") then role = 'TARGET';
MPRINT(EM_DIAGRAM):   if METHOD in("TREE", "TREESURR") then role = 'TARGET';
21669      else if (role = 'REJECTED') then role = 'INPUT';
MPRINT(EM_DIAGRAM):   else if (role = 'REJECTED') then role = 'INPUT';
21670      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M3N8V2S0.
NOTE: The data set WORK.M3N8V2S0 has 13 observations and 23 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21671      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
21672      * Impt: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBClass Macro ;
21673      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21674      %macro DMDBClass;
21675          BAD(DESC) JOB(ASC) REASON(ASC)
21676      %mend DMDBClass;
21677      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21678      * Impt: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * Impt: DMDBVar Macro ;
21679      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
21680      %macro DMDBVar;
21681          CLAGE CLNO DEBTINC DELINQ DEROG LOAN MORTDUE NINQ VALUE YOJ
21682      %mend DMDBVar;
21683      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21684      * Impt: Create DMDB;
MPRINT(EM_DIAGRAM):   * Impt: Create DMDB;
21685      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21686      proc dmdb batch data=EMWS1.Part_TRAIN
21687      dmdbcat=WORK.Impt_DMDB
21688      classout=WORK.Impt_DMDBCLASSOUT
21689      varout=WORK.IMPUTE_3CLSUHZ_DMDBVAROUT
21690      maxlevel = 513
21691      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.Part_TRAIN dmdbcat=WORK.Impt_DMDB classout=WORK.Impt_DMDBCLASSOUT varout=WORK.IMPUTE_3CLSUHZ_DMDBVAROUT maxlevel = 513 ;
MPRINT(EM_DIAGRAM):   class
21692      class %DMDBClass;
MPRINT(DMDBCLASS):   BAD(DESC) JOB(ASC) REASON(ASC)
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   var
21693      var %DMDBVar;
MPRINT(DMDBVAR):   CLAGE CLNO DEBTINC DELINQ DEROG LOAN MORTDUE NINQ VALUE YOJ
MPRINT(EM_DIAGRAM):  ;
21694      target
21695      BAD
21696      ;
MPRINT(EM_DIAGRAM):   target BAD ;
21697      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2382   Memory used = 511K.
NOTE: There were 2382 observations read from the data set EMWS1.PART_TRAIN.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 12 observations and 9 variables.
NOTE: The data set WORK.IMPUTE_3CLSUHZ_DMDBVAROUT has 10 observations and 9 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   *--- end code ---*;
21698      quit;
21699      *--- end code ---*;
 
21700      proc sort data=WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.Impt_DMDBCLASSOUT;
21701      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21702      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 12 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21703      data WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   data WORK.Impt_DMDBCLASSOUT;
21704      retain missFlag;
MPRINT(EM_DIAGRAM):   retain missFlag;
21705      set WORK.Impt_DMDBCLASSOUT;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT;
21706      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21707      output;
MPRINT(EM_DIAGRAM):   output;
21708      if first.name then missflag = 0;
MPRINT(EM_DIAGRAM):   if first.name then missflag = 0;
21709      if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
MPRINT(EM_DIAGRAM):   if (TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.) then missflag = 1;
21710      if last.name and ^missFlag then do;
MPRINT(EM_DIAGRAM):   if last.name and ^missFlag then do;
21711      if type = 'C' then do;
MPRINT(EM_DIAGRAM):   if type = 'C' then do;
21712      LEVEL= '';
MPRINT(EM_DIAGRAM):   LEVEL= '';
21713      CRAW = '';
MPRINT(EM_DIAGRAM):   CRAW = '';
21714      NRAW = .;
MPRINT(EM_DIAGRAM):   NRAW = .;
21715      end;
MPRINT(EM_DIAGRAM):   end;
21716      else do;
MPRINT(EM_DIAGRAM):   else do;
21717      LEVEL='.';
MPRINT(EM_DIAGRAM):   LEVEL='.';
21718      CRAW = '.';
MPRINT(EM_DIAGRAM):   CRAW = '.';
21719      NRAW= .;
MPRINT(EM_DIAGRAM):   NRAW= .;
21720      end;
MPRINT(EM_DIAGRAM):   end;
21721      FREQUENCY = 0;
MPRINT(EM_DIAGRAM):   FREQUENCY = 0;
21722      FREQPERCENT = 0;
MPRINT(EM_DIAGRAM):   FREQPERCENT = 0;
21723      NMISSPERCENT = 0;
MPRINT(EM_DIAGRAM):   NMISSPERCENT = 0;
21724      output;
MPRINT(EM_DIAGRAM):   output;
21725      end;
MPRINT(EM_DIAGRAM):   end;
21726      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 12 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
NOTE: The data set WORK.IMPT_DMDBCLASSOUT has 13 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21727      data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
MPRINT(EM_DIAGRAM):    data WORK.Impt_MISS(KEEP=NAME NMISS PERCENTMISS);
21728      length NAME $32;
MPRINT(EM_DIAGRAM):   length NAME $32;
21729      set
21730      WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.)))
21731      WORK.IMPUTE_3CLSUHZ_DMDBVAROUT
21732      ;
MPRINT(EM_DIAGRAM):   set WORK.Impt_DMDBCLASSOUT(rename=(freqpercent=PERCENTMISS frequency=NMISS) where=((TYPE='C' and CRAW='') or (TYPE='N' and NRAW=.))) WORK.IMPUTE_3CLSUHZ_DMDBVAROUT ;
21733      if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
MPRINT(EM_DIAGRAM):   if (NMISS ne . and N ne .) then PERCENTMISS = (NMISS/(NMISS+N))*100;
21734      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 3 observations read from the data set WORK.IMPT_DMDBCLASSOUT.
      WHERE ((TYPE='C') and (CRAW=' ')) or ((TYPE='N') and (NRAW=.));
NOTE: There were 10 observations read from the data set WORK.IMPUTE_3CLSUHZ_DMDBVAROUT.
NOTE: The data set WORK.IMPT_MISS has 13 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21735      proc sort data=WORK.M1T7XIVN NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.M1T7XIVN NOTHREADS;
21736      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21737      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: The data set WORK.M1T7XIVN has 13 observations and 23 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21738      proc sort data=WORK.Impt_MISS NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.Impt_MISS NOTHREADS;
21739      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21740      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.IMPT_MISS has 13 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21741      data WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   data WORK.M1T7XIVN;
21742      merge WORK.M1T7XIVN WORK.Impt_MISS(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.M1T7XIVN WORK.Impt_MISS(in=_b);
21743      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21744      if _b then output;
MPRINT(EM_DIAGRAM):   if _b then output;
21745      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: There were 13 observations read from the data set WORK.IMPT_MISS.
NOTE: The data set WORK.M1T7XIVN has 13 observations and 25 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21746      data WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   data WORK.M1T7XIVN;
21747      set WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   set WORK.M1T7XIVN;
21748      if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
MPRINT(EM_DIAGRAM):   if 0<PERCENTMISS<50 and method ne 'NONE' then IMPUTE = 1;
21749      else IMPUTE = 0;
MPRINT(EM_DIAGRAM):   else IMPUTE = 0;
21750      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: The data set WORK.M1T7XIVN has 13 observations and 26 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21751      proc dmdb data=WORK.M1T7XIVN outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):    proc dmdb data=WORK.M1T7XIVN outtable=WORK.NEWNAMES nameserver;
21752      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
21753      prefix M_ IMP_;
MPRINT(EM_DIAGRAM):   prefix M_ IMP_;
21754      where IMPUTE=1;
MPRINT(EM_DIAGRAM):   where IMPUTE=1;
21755      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.M1T7XIVN.
      WHERE IMPUTE=1;
NOTE: The data set WORK.NEWNAMES has 11 observations and 3 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21756      data WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   data WORK.M1T7XIVN;
21757      merge WORK.M1T7XIVN WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M1T7XIVN WORK.NEWNAMES;
21758      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21759      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: There were 11 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M1T7XIVN has 13 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21760      proc dmdb data=WORK.M1T7XIVN outtable=WORK.NEWNAMES nameserver;
MPRINT(EM_DIAGRAM):   proc dmdb data=WORK.M1T7XIVN outtable=WORK.NEWNAMES nameserver;
21761      names NAME;
MPRINT(EM_DIAGRAM):   names NAME;
21762      prefix M_;
MPRINT(EM_DIAGRAM):   prefix M_;
21763      where IMPUTE=0;
MPRINT(EM_DIAGRAM):   where IMPUTE=0;
21764      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 2 observations read from the data set WORK.M1T7XIVN.
      WHERE IMPUTE=0;
NOTE: The data set WORK.NEWNAMES has 2 observations and 2 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21765      data WORK.M1T7XIVN;
MPRINT(EM_DIAGRAM):   data WORK.M1T7XIVN;
21766      merge WORK.M1T7XIVN WORK.NEWNAMES;
MPRINT(EM_DIAGRAM):   merge WORK.M1T7XIVN WORK.NEWNAMES;
21767      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21768      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: There were 2 observations read from the data set WORK.NEWNAMES.
NOTE: The data set WORK.M1T7XIVN has 13 observations and 28 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21769      data WORK.Impt;
MPRINT(EM_DIAGRAM):    data WORK.Impt;
21770      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK.IMPT has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21771      data WORK._IMPUTEDS;
MPRINT(EM_DIAGRAM):    data WORK._IMPUTEDS;
21772      JOB = 'Other';
MPRINT(EM_DIAGRAM):   JOB = 'Other';
21773      REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   REASON = 'DebtCon';
21774      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set WORK._IMPUTEDS has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21775      data WORK.Impt;
MPRINT(EM_DIAGRAM):   data WORK.Impt;
21776      merge WORK.Impt WORK._IMPUTEDS;
MPRINT(EM_DIAGRAM):   merge WORK.Impt WORK._IMPUTEDS;
21777      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: There were 1 observations read from the data set WORK._IMPUTEDS.
NOTE: The data set WORK.IMPT has 1 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21778      proc sort data=WORK.METASET1N026AJ out=_imputevar(keep=NAME METHOD);
MPRINT(EM_DIAGRAM):    proc sort data=WORK.METASET1N026AJ out=_imputevar(keep=NAME METHOD);
21779      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21780      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 9 observations read from the data set WORK.METASET1N026AJ.
NOTE: The data set WORK._IMPUTEVAR has 9 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21781      proc sort data=WORK.IMPUTE_3CLSUHZ_DMDBVAROUT;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.IMPUTE_3CLSUHZ_DMDBVAROUT;
21782      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21783      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 10 observations read from the data set WORK.IMPUTE_3CLSUHZ_DMDBVAROUT.
NOTE: The data set WORK.IMPUTE_3CLSUHZ_DMDBVAROUT has 10 observations and 9 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21784      data _null_;
MPRINT(EM_DIAGRAM):   data _null_;
21785      merge WORK.IMPUTE_3CLSUHZ_DMDBVAROUT(in=_a) _imputeVar(in=_b);
MPRINT(EM_DIAGRAM):   merge WORK.IMPUTE_3CLSUHZ_DMDBVAROUT(in=_a) _imputeVar(in=_b);
21786      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21787      if _N_=1 then do;
MPRINT(EM_DIAGRAM):   if _N_=1 then do;
21788      call execute("data WORK._IMPUTEDMDB;");
MPRINT(EM_DIAGRAM):   call execute("data WORK._IMPUTEDMDB;");
21789      end;
MPRINT(EM_DIAGRAM):   end;
21790      if _a and _b then do;
MPRINT(EM_DIAGRAM):   if _a and _b then do;
21791      select(METHOD);
MPRINT(EM_DIAGRAM):   select(METHOD);
21792      when('MEAN') value=mean;
MPRINT(EM_DIAGRAM):   when('MEAN') value=mean;
21793      when('MIN') value=min;
MPRINT(EM_DIAGRAM):   when('MIN') value=min;
21794      when('MAX') value=max;
MPRINT(EM_DIAGRAM):   when('MAX') value=max;
21795      when('RANGE') value=(max-min);
MPRINT(EM_DIAGRAM):   when('RANGE') value=(max-min);
21796      when('MIDRANGE') value=(max+min)/2;
MPRINT(EM_DIAGRAM):   when('MIDRANGE') value=(max+min)/2;
21797      otherwise;
MPRINT(EM_DIAGRAM):   otherwise;
21798      end;
MPRINT(EM_DIAGRAM):   end;
21799      call execute(NAME!!'='!!strip(put(value, best.))!!';');
MPRINT(EM_DIAGRAM):   call execute(NAME!!'='!!strip(put(value, best.))!!';');
21800      end;
MPRINT(EM_DIAGRAM):   end;
21801      run;
MPRINT(EM_DIAGRAM):   run;
 
WARNING: Multiple lengths were specified for the BY variable NAME by input data sets. This might cause unexpected results.
MPRINT(EM_DIAGRAM):   data WORK._IMPUTEDMDB;
MPRINT(EM_DIAGRAM):   CLAGE =182.51421356;
MPRINT(EM_DIAGRAM):   CLNO =21.216440752;
MPRINT(EM_DIAGRAM):   DEBTINC =33.907492422;
MPRINT(EM_DIAGRAM):   DELINQ =0.4679069767;
MPRINT(EM_DIAGRAM):   DEROG =0.2433460076;
MPRINT(EM_DIAGRAM):   MORTDUE =73215.742741;
MPRINT(EM_DIAGRAM):   NINQ =1.1503208066;
MPRINT(EM_DIAGRAM):   VALUE =102461.00508;
MPRINT(EM_DIAGRAM):   YOJ =8.8810123683;
NOTE: There were 10 observations read from the data set WORK.IMPUTE_3CLSUHZ_DMDBVAROUT.
NOTE: There were 9 observations read from the data set WORK._IMPUTEVAR.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
 
 
NOTE: CALL EXECUTE generated line.
1         + data WORK._IMPUTEDMDB;
2         + CLAGE                           =182.51421356;
3         + CLNO                            =21.216440752;
4         + DEBTINC                         =33.907492422;
5         + DELINQ                          =0.4679069767;
6         + DEROG                           =0.2433460076;
7         + MORTDUE                         =73215.742741;
8         + NINQ                            =1.1503208066;
9         + VALUE                           =102461.00508;
10        + YOJ                             =8.8810123683;
 
NOTE: The data set WORK._IMPUTEDMDB has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
21802      data WORK.Impt;
MPRINT(EM_DIAGRAM):   data WORK.Impt;
21803      merge WORK.Impt WORK._IMPUTEDMDB;
MPRINT(EM_DIAGRAM):   merge WORK.Impt WORK._IMPUTEDMDB;
21804      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: There were 1 observations read from the data set WORK._IMPUTEDMDB.
NOTE: The data set WORK.IMPT has 1 observations and 11 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
21805      proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
MPRINT(EM_DIAGRAM):    proc transpose data=WORK.Impt out=WORK._IMPVALUE(drop =_LABEL_ rename=(_NAME_=NAME COL1=VALUE));
21806      var
21807      JOB
21808      REASON
21809      CLAGE
21810      CLNO
21811      DEBTINC
21812      DELINQ
21813      DEROG
21814      MORTDUE
21815      NINQ
21816      VALUE
21817      YOJ
21818      ;
MPRINT(EM_DIAGRAM):   var JOB REASON CLAGE CLNO DEBTINC DELINQ DEROG MORTDUE NINQ VALUE YOJ ;
21819      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Numeric variables in the input data set will be converted to character in the output data set.
WARNING: The variable _LABEL_ in the DROP, KEEP, or RENAME list has never been referenced.
NOTE: There were 1 observations read from the data set WORK.IMPT.
NOTE: The data set WORK._IMPVALUE has 11 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
21820      proc sort data=WORK._IMPVALUE NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK._IMPVALUE NOTHREADS;
21821      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21822      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK._IMPVALUE.
NOTE: The data set WORK._IMPVALUE has 11 observations and 2 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
21823      data EMWS1.Impt_META;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_META;
21824      merge WORK.M1T7XIVN WORK._IMPVALUE;
MPRINT(EM_DIAGRAM):   merge WORK.M1T7XIVN WORK._IMPVALUE;
21825      by NAME;
MPRINT(EM_DIAGRAM):   by NAME;
21826      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 13 observations read from the data set WORK.M1T7XIVN.
NOTE: There were 11 observations read from the data set WORK._IMPVALUE.
NOTE: The data set EMWS1.IMPT_META has 13 observations and 29 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
21827      proc print data=EMWS1.Impt_META(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_META(obs=500) label noobs;
21828      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,          NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,         NOQUOTE))" PERCENTMISS = "%sysfunc(sasmsg(sashelp.dmine, rpt_percentmissing_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" LABEL = "Label" PERCENTMISS = "Percent Missing";
21829      var NAME LABEL PERCENTMISS;
MPRINT(EM_DIAGRAM):   var NAME LABEL PERCENTMISS;
21830      where IMP eq '' and PERCENTMISS>50;
MPRINT(EM_DIAGRAM):   where IMP eq '' and PERCENTMISS>50;
21831      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_rejectedsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Rejected Variables Summary";
21832      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
21833      run;
 
NOTE: No observations were selected from data set EMWS1.IMPT_META.
NOTE: There were 0 observations read from the data set EMWS1.IMPT_META.
      WHERE (IMP=' ') and (PERCENTMISS>50);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 26, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00:09:59" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                October 26, 2018
Time:                00:09:59
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O3LY5AQ1 "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O3LY5AQ1 new;
MPRINT(EM_DIAGRAM):   run;
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this session.
21935      data _null_;
MPRINT(EM_DIAGRAM):    data _null_;
21936      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
21937      length string $34;
MPRINT(EM_DIAGRAM):   length string $34;
21938      retain missTotal;
MPRINT(EM_DIAGRAM):   retain missTotal;
21939      file #LN00434;
MPRINT(EM_DIAGRAM):   file #LN00434;
21940      if _n_=1 then misstotal = percentmiss;
MPRINT(EM_DIAGRAM):   if _n_=1 then misstotal = percentmiss;
21941      missTotal = percentmiss+misstotal;
MPRINT(EM_DIAGRAM):   missTotal = percentmiss+misstotal;
21942      if IMP ne '' and METHOD ne 'NONE' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' and METHOD ne 'NONE' then do;
21943      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
21944      put 'if NAME = ' string 'then delete;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string 'then delete;';
21945      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
21946      string = '"'!!strip(IMP)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(IMP)!!'"';
21947      put 'if NAME    = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME    = ' string ' then do;';
21948      string = '"'!!strip(ROLE)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ROLE)!!'"';
21949      put '   ROLE    = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ROLE    = ' string ';';
21950      string = '"'!!strip(FAMILY)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(FAMILY)!!'"';
21951      put '   FAMILY  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   FAMILY  = ' string ';';
21952      string = '"'!!strip(REPORT)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(REPORT)!!'"';
21953      put '   REPORT  = ' string ';';
MPRINT(EM_DIAGRAM):   put '   REPORT  = ' string ';';
21954      string = '"'!!strip(LEVEL)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(LEVEL)!!'"';
21955      put '   LEVEL   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   LEVEL   = ' string ';';
21956      string = '"'!!strip(ORDER)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(ORDER)!!'"';
21957      put '   ORDER   = ' string ';';
MPRINT(EM_DIAGRAM):   put '   ORDER   = ' string ';';
21958      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
21959      end;
MPRINT(EM_DIAGRAM):   end;
21960      if percentmiss>50 and ROLE ne 'TARGET' then do;
MPRINT(EM_DIAGRAM):   if percentmiss>50 and ROLE ne 'TARGET' then do;
21961      string = '"'!!strip(NAME)!!'"';
MPRINT(EM_DIAGRAM):   string = '"'!!strip(NAME)!!'"';
21962      put 'if NAME = ' string ' then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME = ' string ' then do;';
21963      put '   ROLE ="REJECTED";';
MPRINT(EM_DIAGRAM):   put '   ROLE ="REJECTED";';
21964      put '   COMMENT = "Percent of missing exceeds 50%";';
MPRINT(EM_DIAGRAM):   put '   COMMENT = "Percent of missing exceeds 50%";';
21965      put 'end;';
MPRINT(EM_DIAGRAM):   put 'end;';
21966      end;
MPRINT(EM_DIAGRAM):   end;
21967      put 'else ';
MPRINT(EM_DIAGRAM):   put 'else ';
21968      put 'if NAME  = "' M '" then do;';
MPRINT(EM_DIAGRAM):   put 'if NAME  = "' M '" then do;';
21969      put '   ROLE  ="INPUT";';
MPRINT(EM_DIAGRAM):   put '   ROLE  ="INPUT";';
21970      if percentmiss>0 then put '   LEVEL ="BINARY";';
MPRINT(EM_DIAGRAM):   if percentmiss>0 then put '   LEVEL ="BINARY";';
21971      else put '   LEVEL ="UNARY";';
MPRINT(EM_DIAGRAM):   else put '   LEVEL ="UNARY";';
21972      put ' end;';
MPRINT(EM_DIAGRAM):   put ' end;';
21973      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The file #LN00434 is:
      Filename=J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas,
      RECFM=V,LRECL=32767,File Size (bytes)=0,
      Last Modified=26Oct2018:00:10:00,
      Create Time=25Oct2018:23:30:49
 
NOTE: 164 records were written to the file #LN00434.
      The minimum record length was 4.
      The maximum record length was 36.
NOTE: There were 13 observations read from the data set EMWS1.IMPT_META.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
21974      filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
21975      *------------------------------------------------------------*;
21976      * Impt: Scoring DATA data;
21977      *------------------------------------------------------------*;
21978      data EMWS1.Impt_TRAIN
21979      / view=EMWS1.Impt_TRAIN
21980      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TRAIN / view=EMWS1.Impt_TRAIN ;
21981      set EMWS1.Part_TRAIN
21982      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TRAIN ;
21983      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
21984     +*;
MPRINT(EM_DIAGRAM):   *;
21985     +*MOST FREQUENT VALUE (COUNT);
MPRINT(EM_DIAGRAM):   *MOST FREQUENT VALUE (COUNT);
21986     +*;
MPRINT(EM_DIAGRAM):   *;
21987     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
21988     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
21989     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
21990     +if JOB = '' then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   if JOB = '' then IMP_JOB = 'Other';
21991     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
21992     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
21993     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
21994     +if REASON = '' then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if REASON = '' then IMP_REASON = 'DebtCon';
21995     +*;
MPRINT(EM_DIAGRAM):   *;
21996     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
21997     +*;
MPRINT(EM_DIAGRAM):   *;
21998     +label IMP_CLAGE = 'Imputed CLAGE';
MPRINT(EM_DIAGRAM):   label IMP_CLAGE = 'Imputed CLAGE';
21999     +IMP_CLAGE = CLAGE;
MPRINT(EM_DIAGRAM):   IMP_CLAGE = CLAGE;
22000     +if missing(CLAGE) then IMP_CLAGE = 182.51421356;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then IMP_CLAGE = 182.51421356;
22001     +label IMP_CLNO = 'Imputed CLNO';
MPRINT(EM_DIAGRAM):   label IMP_CLNO = 'Imputed CLNO';
22002     +IMP_CLNO = CLNO;
MPRINT(EM_DIAGRAM):   IMP_CLNO = CLNO;
22003     +if missing(CLNO) then IMP_CLNO = 21.216440752;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then IMP_CLNO = 21.216440752;
22004     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
22005     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
22006     +if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
22007     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
22008     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
22009     +if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
22010     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
22011     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
22012     +if missing(DEROG) then IMP_DEROG = 0.2433460076;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then IMP_DEROG = 0.2433460076;
22013     +label IMP_MORTDUE = 'Imputed MORTDUE';
MPRINT(EM_DIAGRAM):   label IMP_MORTDUE = 'Imputed MORTDUE';
22014     +IMP_MORTDUE = MORTDUE;
MPRINT(EM_DIAGRAM):   IMP_MORTDUE = MORTDUE;
22015     +if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
22016     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
22017     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
22018     +if missing(NINQ) then IMP_NINQ = 1.1503208066;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then IMP_NINQ = 1.1503208066;
22019     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
22020     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
22021     +if missing(VALUE) then IMP_VALUE = 102461.00508;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then IMP_VALUE = 102461.00508;
22022     +label IMP_YOJ = 'Imputed YOJ';
MPRINT(EM_DIAGRAM):   label IMP_YOJ = 'Imputed YOJ';
22023     +IMP_YOJ = YOJ;
MPRINT(EM_DIAGRAM):   IMP_YOJ = YOJ;
22024     +if missing(YOJ) then IMP_YOJ = 8.8810123683;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then IMP_YOJ = 8.8810123683;
22025     +*;
MPRINT(EM_DIAGRAM):   *;
22026     +*INDICATOR VARIABLES;
MPRINT(EM_DIAGRAM):   *INDICATOR VARIABLES;
22027     +*;
MPRINT(EM_DIAGRAM):   *;
22028     +label M_CLAGE = "Imputation Indicator for CLAGE";
MPRINT(EM_DIAGRAM):   label M_CLAGE = "Imputation Indicator for CLAGE";
22029     +if missing(CLAGE) then M_CLAGE = 1;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then M_CLAGE = 1;
22030     +else M_CLAGE= 0;
MPRINT(EM_DIAGRAM):   else M_CLAGE= 0;
22031     +label M_CLNO = "Imputation Indicator for CLNO";
MPRINT(EM_DIAGRAM):   label M_CLNO = "Imputation Indicator for CLNO";
22032     +if missing(CLNO) then M_CLNO = 1;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then M_CLNO = 1;
22033     +else M_CLNO= 0;
MPRINT(EM_DIAGRAM):   else M_CLNO= 0;
22034     +label M_DEBTINC = "Imputation Indicator for DEBTINC";
MPRINT(EM_DIAGRAM):   label M_DEBTINC = "Imputation Indicator for DEBTINC";
22035     +if missing(DEBTINC) then M_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then M_DEBTINC = 1;
22036     +else M_DEBTINC= 0;
MPRINT(EM_DIAGRAM):   else M_DEBTINC= 0;
22037     +label M_DELINQ = "Imputation Indicator for DELINQ";
MPRINT(EM_DIAGRAM):   label M_DELINQ = "Imputation Indicator for DELINQ";
22038     +if missing(DELINQ) then M_DELINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then M_DELINQ = 1;
22039     +else M_DELINQ= 0;
MPRINT(EM_DIAGRAM):   else M_DELINQ= 0;
22040     +label M_DEROG = "Imputation Indicator for DEROG";
MPRINT(EM_DIAGRAM):   label M_DEROG = "Imputation Indicator for DEROG";
22041     +if missing(DEROG) then M_DEROG = 1;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then M_DEROG = 1;
22042     +else M_DEROG= 0;
MPRINT(EM_DIAGRAM):   else M_DEROG= 0;
22043     +label M_JOB = "Imputation Indicator for JOB";
MPRINT(EM_DIAGRAM):   label M_JOB = "Imputation Indicator for JOB";
22044     +if JOB = '' then M_JOB = 1;
MPRINT(EM_DIAGRAM):   if JOB = '' then M_JOB = 1;
22045     +else M_JOB= 0;
MPRINT(EM_DIAGRAM):   else M_JOB= 0;
22046     +label M_MORTDUE = "Imputation Indicator for MORTDUE";
MPRINT(EM_DIAGRAM):   label M_MORTDUE = "Imputation Indicator for MORTDUE";
22047     +if missing(MORTDUE) then M_MORTDUE = 1;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then M_MORTDUE = 1;
22048     +else M_MORTDUE= 0;
MPRINT(EM_DIAGRAM):   else M_MORTDUE= 0;
22049     +label M_NINQ = "Imputation Indicator for NINQ";
MPRINT(EM_DIAGRAM):   label M_NINQ = "Imputation Indicator for NINQ";
22050     +if missing(NINQ) then M_NINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then M_NINQ = 1;
22051     +else M_NINQ= 0;
MPRINT(EM_DIAGRAM):   else M_NINQ= 0;
22052     +label M_REASON = "Imputation Indicator for REASON";
MPRINT(EM_DIAGRAM):   label M_REASON = "Imputation Indicator for REASON";
22053     +if REASON = '' then M_REASON = 1;
MPRINT(EM_DIAGRAM):   if REASON = '' then M_REASON = 1;
22054     +else M_REASON= 0;
MPRINT(EM_DIAGRAM):   else M_REASON= 0;
22055     +label M_VALUE = "Imputation Indicator for VALUE";
MPRINT(EM_DIAGRAM):   label M_VALUE = "Imputation Indicator for VALUE";
22056     +if missing(VALUE) then M_VALUE = 1;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then M_VALUE = 1;
22057     +else M_VALUE= 0;
MPRINT(EM_DIAGRAM):   else M_VALUE= 0;
22058     +label M_YOJ = "Imputation Indicator for YOJ";
MPRINT(EM_DIAGRAM):   label M_YOJ = "Imputation Indicator for YOJ";
22059     +if missing(YOJ) then M_YOJ = 1;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then M_YOJ = 1;
22060     +else M_YOJ= 0;
MPRINT(EM_DIAGRAM):   else M_YOJ= 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22061      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22062      quit;
22063      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22064      filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22065      *------------------------------------------------------------*;
22066      * Impt: Scoring VALIDATE data;
22067      *------------------------------------------------------------*;
22068      data EMWS1.Impt_VALIDATE
22069      / view=EMWS1.Impt_VALIDATE
22070      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_VALIDATE / view=EMWS1.Impt_VALIDATE ;
22071      set EMWS1.Part_VALIDATE
22072      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_VALIDATE ;
22073      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
22074     +*;
MPRINT(EM_DIAGRAM):   *;
22075     +*MOST FREQUENT VALUE (COUNT);
MPRINT(EM_DIAGRAM):   *MOST FREQUENT VALUE (COUNT);
22076     +*;
MPRINT(EM_DIAGRAM):   *;
22077     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
22078     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
22079     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
22080     +if JOB = '' then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   if JOB = '' then IMP_JOB = 'Other';
22081     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
22082     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
22083     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
22084     +if REASON = '' then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if REASON = '' then IMP_REASON = 'DebtCon';
22085     +*;
MPRINT(EM_DIAGRAM):   *;
22086     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
22087     +*;
MPRINT(EM_DIAGRAM):   *;
22088     +label IMP_CLAGE = 'Imputed CLAGE';
MPRINT(EM_DIAGRAM):   label IMP_CLAGE = 'Imputed CLAGE';
22089     +IMP_CLAGE = CLAGE;
MPRINT(EM_DIAGRAM):   IMP_CLAGE = CLAGE;
22090     +if missing(CLAGE) then IMP_CLAGE = 182.51421356;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then IMP_CLAGE = 182.51421356;
22091     +label IMP_CLNO = 'Imputed CLNO';
MPRINT(EM_DIAGRAM):   label IMP_CLNO = 'Imputed CLNO';
22092     +IMP_CLNO = CLNO;
MPRINT(EM_DIAGRAM):   IMP_CLNO = CLNO;
22093     +if missing(CLNO) then IMP_CLNO = 21.216440752;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then IMP_CLNO = 21.216440752;
22094     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
22095     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
22096     +if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
22097     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
22098     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
22099     +if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
22100     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
22101     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
22102     +if missing(DEROG) then IMP_DEROG = 0.2433460076;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then IMP_DEROG = 0.2433460076;
22103     +label IMP_MORTDUE = 'Imputed MORTDUE';
MPRINT(EM_DIAGRAM):   label IMP_MORTDUE = 'Imputed MORTDUE';
22104     +IMP_MORTDUE = MORTDUE;
MPRINT(EM_DIAGRAM):   IMP_MORTDUE = MORTDUE;
22105     +if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
22106     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
22107     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
22108     +if missing(NINQ) then IMP_NINQ = 1.1503208066;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then IMP_NINQ = 1.1503208066;
22109     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
22110     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
22111     +if missing(VALUE) then IMP_VALUE = 102461.00508;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then IMP_VALUE = 102461.00508;
22112     +label IMP_YOJ = 'Imputed YOJ';
MPRINT(EM_DIAGRAM):   label IMP_YOJ = 'Imputed YOJ';
22113     +IMP_YOJ = YOJ;
MPRINT(EM_DIAGRAM):   IMP_YOJ = YOJ;
22114     +if missing(YOJ) then IMP_YOJ = 8.8810123683;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then IMP_YOJ = 8.8810123683;
22115     +*;
MPRINT(EM_DIAGRAM):   *;
22116     +*INDICATOR VARIABLES;
MPRINT(EM_DIAGRAM):   *INDICATOR VARIABLES;
22117     +*;
MPRINT(EM_DIAGRAM):   *;
22118     +label M_CLAGE = "Imputation Indicator for CLAGE";
MPRINT(EM_DIAGRAM):   label M_CLAGE = "Imputation Indicator for CLAGE";
22119     +if missing(CLAGE) then M_CLAGE = 1;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then M_CLAGE = 1;
22120     +else M_CLAGE= 0;
MPRINT(EM_DIAGRAM):   else M_CLAGE= 0;
22121     +label M_CLNO = "Imputation Indicator for CLNO";
MPRINT(EM_DIAGRAM):   label M_CLNO = "Imputation Indicator for CLNO";
22122     +if missing(CLNO) then M_CLNO = 1;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then M_CLNO = 1;
22123     +else M_CLNO= 0;
MPRINT(EM_DIAGRAM):   else M_CLNO= 0;
22124     +label M_DEBTINC = "Imputation Indicator for DEBTINC";
MPRINT(EM_DIAGRAM):   label M_DEBTINC = "Imputation Indicator for DEBTINC";
22125     +if missing(DEBTINC) then M_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then M_DEBTINC = 1;
22126     +else M_DEBTINC= 0;
MPRINT(EM_DIAGRAM):   else M_DEBTINC= 0;
22127     +label M_DELINQ = "Imputation Indicator for DELINQ";
MPRINT(EM_DIAGRAM):   label M_DELINQ = "Imputation Indicator for DELINQ";
22128     +if missing(DELINQ) then M_DELINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then M_DELINQ = 1;
22129     +else M_DELINQ= 0;
MPRINT(EM_DIAGRAM):   else M_DELINQ= 0;
22130     +label M_DEROG = "Imputation Indicator for DEROG";
MPRINT(EM_DIAGRAM):   label M_DEROG = "Imputation Indicator for DEROG";
22131     +if missing(DEROG) then M_DEROG = 1;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then M_DEROG = 1;
22132     +else M_DEROG= 0;
MPRINT(EM_DIAGRAM):   else M_DEROG= 0;
22133     +label M_JOB = "Imputation Indicator for JOB";
MPRINT(EM_DIAGRAM):   label M_JOB = "Imputation Indicator for JOB";
22134     +if JOB = '' then M_JOB = 1;
MPRINT(EM_DIAGRAM):   if JOB = '' then M_JOB = 1;
22135     +else M_JOB= 0;
MPRINT(EM_DIAGRAM):   else M_JOB= 0;
22136     +label M_MORTDUE = "Imputation Indicator for MORTDUE";
MPRINT(EM_DIAGRAM):   label M_MORTDUE = "Imputation Indicator for MORTDUE";
22137     +if missing(MORTDUE) then M_MORTDUE = 1;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then M_MORTDUE = 1;
22138     +else M_MORTDUE= 0;
MPRINT(EM_DIAGRAM):   else M_MORTDUE= 0;
22139     +label M_NINQ = "Imputation Indicator for NINQ";
MPRINT(EM_DIAGRAM):   label M_NINQ = "Imputation Indicator for NINQ";
22140     +if missing(NINQ) then M_NINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then M_NINQ = 1;
22141     +else M_NINQ= 0;
MPRINT(EM_DIAGRAM):   else M_NINQ= 0;
22142     +label M_REASON = "Imputation Indicator for REASON";
MPRINT(EM_DIAGRAM):   label M_REASON = "Imputation Indicator for REASON";
22143     +if REASON = '' then M_REASON = 1;
MPRINT(EM_DIAGRAM):   if REASON = '' then M_REASON = 1;
22144     +else M_REASON= 0;
MPRINT(EM_DIAGRAM):   else M_REASON= 0;
22145     +label M_VALUE = "Imputation Indicator for VALUE";
MPRINT(EM_DIAGRAM):   label M_VALUE = "Imputation Indicator for VALUE";
22146     +if missing(VALUE) then M_VALUE = 1;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then M_VALUE = 1;
22147     +else M_VALUE= 0;
MPRINT(EM_DIAGRAM):   else M_VALUE= 0;
22148     +label M_YOJ = "Imputation Indicator for YOJ";
MPRINT(EM_DIAGRAM):   label M_YOJ = "Imputation Indicator for YOJ";
22149     +if missing(YOJ) then M_YOJ = 1;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then M_YOJ = 1;
22150     +else M_YOJ= 0;
MPRINT(EM_DIAGRAM):   else M_YOJ= 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22151      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22152      quit;
22153      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22154      filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Scoring TEST data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22155      *------------------------------------------------------------*;
22156      * Impt: Scoring TEST data;
22157      *------------------------------------------------------------*;
22158      data EMWS1.Impt_TEST
22159      / view=EMWS1.Impt_TEST
22160      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_TEST / view=EMWS1.Impt_TEST ;
22161      set EMWS1.Part_TEST
22162      ;
MPRINT(EM_DIAGRAM):   set EMWS1.Part_TEST ;
22163      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMFLOWSCORE.sas.
22164     +*;
MPRINT(EM_DIAGRAM):   *;
22165     +*MOST FREQUENT VALUE (COUNT);
MPRINT(EM_DIAGRAM):   *MOST FREQUENT VALUE (COUNT);
22166     +*;
MPRINT(EM_DIAGRAM):   *;
22167     +length IMP_JOB $7;
MPRINT(EM_DIAGRAM):   length IMP_JOB $7;
22168     +label IMP_JOB = 'Imputed JOB';
MPRINT(EM_DIAGRAM):   label IMP_JOB = 'Imputed JOB';
22169     +IMP_JOB = JOB;
MPRINT(EM_DIAGRAM):   IMP_JOB = JOB;
22170     +if JOB = '' then IMP_JOB = 'Other';
MPRINT(EM_DIAGRAM):   if JOB = '' then IMP_JOB = 'Other';
22171     +length IMP_REASON $7;
MPRINT(EM_DIAGRAM):   length IMP_REASON $7;
22172     +label IMP_REASON = 'Imputed REASON';
MPRINT(EM_DIAGRAM):   label IMP_REASON = 'Imputed REASON';
22173     +IMP_REASON = REASON;
MPRINT(EM_DIAGRAM):   IMP_REASON = REASON;
22174     +if REASON = '' then IMP_REASON = 'DebtCon';
MPRINT(EM_DIAGRAM):   if REASON = '' then IMP_REASON = 'DebtCon';
22175     +*;
MPRINT(EM_DIAGRAM):   *;
22176     +*MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
MPRINT(EM_DIAGRAM):   *MEAN-MAX-MIN-MEDIAN-MIDRANGE AND ROBUST ESTIMATES;
22177     +*;
MPRINT(EM_DIAGRAM):   *;
22178     +label IMP_CLAGE = 'Imputed CLAGE';
MPRINT(EM_DIAGRAM):   label IMP_CLAGE = 'Imputed CLAGE';
22179     +IMP_CLAGE = CLAGE;
MPRINT(EM_DIAGRAM):   IMP_CLAGE = CLAGE;
22180     +if missing(CLAGE) then IMP_CLAGE = 182.51421356;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then IMP_CLAGE = 182.51421356;
22181     +label IMP_CLNO = 'Imputed CLNO';
MPRINT(EM_DIAGRAM):   label IMP_CLNO = 'Imputed CLNO';
22182     +IMP_CLNO = CLNO;
MPRINT(EM_DIAGRAM):   IMP_CLNO = CLNO;
22183     +if missing(CLNO) then IMP_CLNO = 21.216440752;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then IMP_CLNO = 21.216440752;
22184     +label IMP_DEBTINC = 'Imputed DEBTINC';
MPRINT(EM_DIAGRAM):   label IMP_DEBTINC = 'Imputed DEBTINC';
22185     +IMP_DEBTINC = DEBTINC;
MPRINT(EM_DIAGRAM):   IMP_DEBTINC = DEBTINC;
22186     +if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then IMP_DEBTINC = 33.907492422;
22187     +label IMP_DELINQ = 'Imputed DELINQ';
MPRINT(EM_DIAGRAM):   label IMP_DELINQ = 'Imputed DELINQ';
22188     +IMP_DELINQ = DELINQ;
MPRINT(EM_DIAGRAM):   IMP_DELINQ = DELINQ;
22189     +if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then IMP_DELINQ = 0.4679069767;
22190     +label IMP_DEROG = 'Imputed DEROG';
MPRINT(EM_DIAGRAM):   label IMP_DEROG = 'Imputed DEROG';
22191     +IMP_DEROG = DEROG;
MPRINT(EM_DIAGRAM):   IMP_DEROG = DEROG;
22192     +if missing(DEROG) then IMP_DEROG = 0.2433460076;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then IMP_DEROG = 0.2433460076;
22193     +label IMP_MORTDUE = 'Imputed MORTDUE';
MPRINT(EM_DIAGRAM):   label IMP_MORTDUE = 'Imputed MORTDUE';
22194     +IMP_MORTDUE = MORTDUE;
MPRINT(EM_DIAGRAM):   IMP_MORTDUE = MORTDUE;
22195     +if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then IMP_MORTDUE = 73215.742741;
22196     +label IMP_NINQ = 'Imputed NINQ';
MPRINT(EM_DIAGRAM):   label IMP_NINQ = 'Imputed NINQ';
22197     +IMP_NINQ = NINQ;
MPRINT(EM_DIAGRAM):   IMP_NINQ = NINQ;
22198     +if missing(NINQ) then IMP_NINQ = 1.1503208066;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then IMP_NINQ = 1.1503208066;
22199     +label IMP_VALUE = 'Imputed VALUE';
MPRINT(EM_DIAGRAM):   label IMP_VALUE = 'Imputed VALUE';
22200     +IMP_VALUE = VALUE;
MPRINT(EM_DIAGRAM):   IMP_VALUE = VALUE;
22201     +if missing(VALUE) then IMP_VALUE = 102461.00508;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then IMP_VALUE = 102461.00508;
22202     +label IMP_YOJ = 'Imputed YOJ';
MPRINT(EM_DIAGRAM):   label IMP_YOJ = 'Imputed YOJ';
22203     +IMP_YOJ = YOJ;
MPRINT(EM_DIAGRAM):   IMP_YOJ = YOJ;
22204     +if missing(YOJ) then IMP_YOJ = 8.8810123683;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then IMP_YOJ = 8.8810123683;
22205     +*;
MPRINT(EM_DIAGRAM):   *;
22206     +*INDICATOR VARIABLES;
MPRINT(EM_DIAGRAM):   *INDICATOR VARIABLES;
22207     +*;
MPRINT(EM_DIAGRAM):   *;
22208     +label M_CLAGE = "Imputation Indicator for CLAGE";
MPRINT(EM_DIAGRAM):   label M_CLAGE = "Imputation Indicator for CLAGE";
22209     +if missing(CLAGE) then M_CLAGE = 1;
MPRINT(EM_DIAGRAM):   if missing(CLAGE) then M_CLAGE = 1;
22210     +else M_CLAGE= 0;
MPRINT(EM_DIAGRAM):   else M_CLAGE= 0;
22211     +label M_CLNO = "Imputation Indicator for CLNO";
MPRINT(EM_DIAGRAM):   label M_CLNO = "Imputation Indicator for CLNO";
22212     +if missing(CLNO) then M_CLNO = 1;
MPRINT(EM_DIAGRAM):   if missing(CLNO) then M_CLNO = 1;
22213     +else M_CLNO= 0;
MPRINT(EM_DIAGRAM):   else M_CLNO= 0;
22214     +label M_DEBTINC = "Imputation Indicator for DEBTINC";
MPRINT(EM_DIAGRAM):   label M_DEBTINC = "Imputation Indicator for DEBTINC";
22215     +if missing(DEBTINC) then M_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   if missing(DEBTINC) then M_DEBTINC = 1;
22216     +else M_DEBTINC= 0;
MPRINT(EM_DIAGRAM):   else M_DEBTINC= 0;
22217     +label M_DELINQ = "Imputation Indicator for DELINQ";
MPRINT(EM_DIAGRAM):   label M_DELINQ = "Imputation Indicator for DELINQ";
22218     +if missing(DELINQ) then M_DELINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(DELINQ) then M_DELINQ = 1;
22219     +else M_DELINQ= 0;
MPRINT(EM_DIAGRAM):   else M_DELINQ= 0;
22220     +label M_DEROG = "Imputation Indicator for DEROG";
MPRINT(EM_DIAGRAM):   label M_DEROG = "Imputation Indicator for DEROG";
22221     +if missing(DEROG) then M_DEROG = 1;
MPRINT(EM_DIAGRAM):   if missing(DEROG) then M_DEROG = 1;
22222     +else M_DEROG= 0;
MPRINT(EM_DIAGRAM):   else M_DEROG= 0;
22223     +label M_JOB = "Imputation Indicator for JOB";
MPRINT(EM_DIAGRAM):   label M_JOB = "Imputation Indicator for JOB";
22224     +if JOB = '' then M_JOB = 1;
MPRINT(EM_DIAGRAM):   if JOB = '' then M_JOB = 1;
22225     +else M_JOB= 0;
MPRINT(EM_DIAGRAM):   else M_JOB= 0;
22226     +label M_MORTDUE = "Imputation Indicator for MORTDUE";
MPRINT(EM_DIAGRAM):   label M_MORTDUE = "Imputation Indicator for MORTDUE";
22227     +if missing(MORTDUE) then M_MORTDUE = 1;
MPRINT(EM_DIAGRAM):   if missing(MORTDUE) then M_MORTDUE = 1;
22228     +else M_MORTDUE= 0;
MPRINT(EM_DIAGRAM):   else M_MORTDUE= 0;
22229     +label M_NINQ = "Imputation Indicator for NINQ";
MPRINT(EM_DIAGRAM):   label M_NINQ = "Imputation Indicator for NINQ";
22230     +if missing(NINQ) then M_NINQ = 1;
MPRINT(EM_DIAGRAM):   if missing(NINQ) then M_NINQ = 1;
22231     +else M_NINQ= 0;
MPRINT(EM_DIAGRAM):   else M_NINQ= 0;
22232     +label M_REASON = "Imputation Indicator for REASON";
MPRINT(EM_DIAGRAM):   label M_REASON = "Imputation Indicator for REASON";
22233     +if REASON = '' then M_REASON = 1;
MPRINT(EM_DIAGRAM):   if REASON = '' then M_REASON = 1;
22234     +else M_REASON= 0;
MPRINT(EM_DIAGRAM):   else M_REASON= 0;
22235     +label M_VALUE = "Imputation Indicator for VALUE";
MPRINT(EM_DIAGRAM):   label M_VALUE = "Imputation Indicator for VALUE";
22236     +if missing(VALUE) then M_VALUE = 1;
MPRINT(EM_DIAGRAM):   if missing(VALUE) then M_VALUE = 1;
22237     +else M_VALUE= 0;
MPRINT(EM_DIAGRAM):   else M_VALUE= 0;
22238     +label M_YOJ = "Imputation Indicator for YOJ";
MPRINT(EM_DIAGRAM):   label M_YOJ = "Imputation Indicator for YOJ";
22239     +if missing(YOJ) then M_YOJ = 1;
MPRINT(EM_DIAGRAM):   if missing(YOJ) then M_YOJ = 1;
22240     +else M_YOJ= 0;
MPRINT(EM_DIAGRAM):   else M_YOJ= 0;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22241      run;
 
NOTE: DATA STEP view saved on file EMWS1.IMPT_TEST.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22242      quit;
22243      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22244      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
22245      * Impt: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   * Impt: Computing metadata for TRAIN data;
22246      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Impt_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Impt_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Impt_TRAIN out=WORK.M0XJVY5O noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XJVY5O;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XJVY5O(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0XJVY5O;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M0XJVY5O;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M0HU_XLP NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0M49THT(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   set WORK.M0HU_XLP;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.Part_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.Part_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Impt_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Impt";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Impt: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   else if NAME = "M_BAD " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="UNARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "CLAGE" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_CLAGE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_CLAGE " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "CLNO" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_CLNO" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_CLNO " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "DEBTINC" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DEBTINC" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_DEBTINC " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "DELINQ" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DELINQ" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_DELINQ " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "DEROG" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_DEROG" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_DEROG " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "JOB" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_JOB" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "NOMINAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_JOB " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_LOAN " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="UNARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "MORTDUE" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_MORTDUE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_MORTDUE " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "NINQ" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_NINQ" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_NINQ " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "REASON" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_REASON" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "BINARY" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_REASON " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "VALUE" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_VALUE" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_VALUE " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   if NAME = "YOJ" then delete;
MPRINT(EM_DIAGRAM):   else if NAME = "IMP_YOJ" then do;
MPRINT(EM_DIAGRAM):   ROLE = "INPUT" ;
MPRINT(EM_DIAGRAM):   FAMILY = "" ;
MPRINT(EM_DIAGRAM):   REPORT = "N" ;
MPRINT(EM_DIAGRAM):   LEVEL = "INTERVAL" ;
MPRINT(EM_DIAGRAM):   ORDER = "" ;
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   else if NAME = "M_YOJ " then do;
MPRINT(EM_DIAGRAM):   ROLE ="INPUT";
MPRINT(EM_DIAGRAM):   LEVEL ="BINARY";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.IMPT_TRAIN.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS1.IMPT_VALIDATE.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
NOTE: View EMWS1.IMPT_TEST.VIEW used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "October 26, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "00:10:02" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                October 26, 2018
Time:                00:10:02
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O0XKAUUJ "J:\JMMORR01\CIS 445\Tutorial 2\My Project\Workspaces\EMWS1\Impt\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O0XKAUUJ new;
MPRINT(EM_DIAGRAM):   run;
22771      %let _nimpute = 0;
22772      data EMWS1.Impt_RESULT;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_RESULT;
22773      label NAME = "%sysfunc(sasmsg(sashelp.dmine, meta_name_vlabel,        NOQUOTE))" METHOD = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputemethod_vlabel, NOQUOTE))" IMPUTED = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputedvar_vlabel,   NOQUOTE))" INDICATOR
22773    !  =
22774         "%sysfunc(sasmsg(sashelp.dmine, rpt_indicatorvar_vlabel, NOQUOTE))" VALUE = "%sysfunc(sasmsg(sashelp.dmine, rpt_imputevalue_vlabel,  NOQUOTE))" ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel,        NOQUOTE))" LEVEL =
22775         "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel,       NOQUOTE))" LABEL = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel,       NOQUOTE))" TRAIN = "%sysfunc(sasmsg(sashelp.dmine, rpt_missingcount_vlabel, NOQUOTE, TRAIN))";
MPRINT(EM_DIAGRAM):   label NAME = "Variable Name" METHOD = "Impute Method" IMPUTED = "Imputed Variable" INDICATOR = "Indicator Variable" VALUE = "Impute Value" ROLE = "Role" LEVEL = "Measurement Level" LABEL = "Label" TRAIN = "Number of Missing for
TRAIN";
22776      set EMWS1.Impt_META(where=(IMPUTED ne '' or (INDICATOR ne '' and TRAIN > 0)) keep=NAME METHOD IMP M VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED M=INDICATOR NMISS=TRAIN)) end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META(where=(IMPUTED ne '' or (INDICATOR ne '' and TRAIN > 0)) keep=NAME METHOD IMP M VALUE ROLE NMISS LEVEL LABEL rename=(IMP=IMPUTED M=INDICATOR NMISS=TRAIN)) end=eof;
22777      if eof then call symput('_nimpute', '1');
MPRINT(EM_DIAGRAM):   if eof then call symput('_nimpute', '1');
22778      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.IMPT_META.
      WHERE (IMPUTED not = ' ') or ((INDICATOR not = ' ') and (TRAIN>0));
NOTE: The data set EMWS1.IMPT_RESULT has 11 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.04 seconds
 
 
22779      proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
MPRINT(EM_DIAGRAM):    proc print data=EMWS1.Impt_RESULT(obs=500) label noobs;
22780      title9 "%sysfunc(sasmsg(sashelp.dmine, rpt_imputationsummary_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title9 "Imputation Summary";
22781      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_numberobs_title,         NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Number Of Observations";
MPRINT(EM_DIAGRAM):   run;
22782      run;
 
NOTE: There were 11 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The PROCEDURE PRINT printed page 2.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
 
 
22783      proc freq data=EMWS1.Impt_RESULT noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Impt_RESULT noprint;
22784      table train /out=WORK.ImptSUMMARY nocum;
MPRINT(EM_DIAGRAM):   table train /out=WORK.ImptSUMMARY nocum;
22785      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: The data set WORK.IMPTSUMMARY has 11 observations and 3 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
22786      proc sort data=WORK.ImptSUMMARY NOTHREADS;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.ImptSUMMARY NOTHREADS;
22787      by descending TRAIN;
MPRINT(EM_DIAGRAM):   by descending TRAIN;
22788      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 11 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The data set WORK.IMPTSUMMARY has 11 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22789      proc print data=WORK.ImptSUMMARY(obs=100) label;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ImptSUMMARY(obs=100) label;
22790      label COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varcount_vlabel,  NOQUOTE))" PERCENT = "%sysfunc(sasmsg(sashelp.dmine, rpt_varpercent_vlabel,  NOQUOTE))";
MPRINT(EM_DIAGRAM):   label COUNT = "Number of Variables" PERCENT = "Percent of Variables";
22791      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22792      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_missingvardistribution_title, NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Distribution Training Data";
MPRINT(EM_DIAGRAM):   run;
22793      run;
 
NOTE: There were 11 observations read from the data set WORK.IMPTSUMMARY.
NOTE: The PROCEDURE PRINT printed page 3.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22794      data EMWS1.Impt_EMSCOREVAR;
MPRINT(EM_DIAGRAM):    data EMWS1.Impt_EMSCOREVAR;
22795      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
22796      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
22797      set EMWS1.Impt_META end=eof;
MPRINT(EM_DIAGRAM):   set EMWS1.Impt_META end=eof;
22798      *set EMWS1.Impt_RESULT end=eof;
MPRINT(EM_DIAGRAM):   *set EMWS1.Impt_RESULT end=eof;
22799      if M ne '' then do;
MPRINT(EM_DIAGRAM):   if M ne '' then do;
22800      NAME= M;
MPRINT(EM_DIAGRAM):   NAME= M;
22801      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
22802      output;
MPRINT(EM_DIAGRAM):   output;
22803      end;
MPRINT(EM_DIAGRAM):   end;
22804      if IMP ne '' then do;
MPRINT(EM_DIAGRAM):   if IMP ne '' then do;
22805      NAME= IMP;
MPRINT(EM_DIAGRAM):   NAME= IMP;
22806      file="IMPUTECODE\"!!strip(NAME)!!'.sas';
MPRINT(EM_DIAGRAM):   file="IMPUTECODE\"!!strip(NAME)!!'.sas';
22807      output;
MPRINT(EM_DIAGRAM):   output;
22808      end;
MPRINT(EM_DIAGRAM):   end;
22809      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.IMPT_META.
NOTE: The data set EMWS1.IMPT_EMSCOREVAR has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
